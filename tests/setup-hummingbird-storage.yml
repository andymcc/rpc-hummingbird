---
- name: Setup some localhost bits for MaaS testing
  hosts: localhost
  become: true
  tasks:
  - name: Setup directories
    file:
      state: directory
      path: "/etc/hummingbird"

- name: Playbook for configuring fake storage on hummingbird hosts
  hosts: nodes
  become: true
  tasks:
  - include: cleanup-hummingbird-storage.yml
  - name: Ensure xfsprogs is installed on localhost
    package:
      name: xfsprogs
      state: present
      use: "{{ ansible_pkg_mgr }}"
    delegate_to: "{{ physical_host }}"
    run_once: True

  - name: Ensure xfsprogs is installed on containers
    package:
      name: xfsprogs
      state: present

  - name: Create hummingbird files
    shell: "fallocate -l {{ rpc_hummingbird_test_drive_size }} /opt/{{ container_name }}_{{ item }}.img"
    args:
      creates: "/opt/{{ container_name }}_{{ item }}.img"
    with_items:
      - drive1
      - drive2
      - drive3
    register: hummingbird_create
    delegate_to: "{{ physical_host }}"

  - name: Run losetup
    shell: "losetup --find --show -P /opt/{{ container_name }}_{{ item }}.img"
    with_items:
      - drive1
      - drive2
      - drive3
    register: hummingbird_losetup
    delegate_to: "{{ physical_host }}"

  - name: Get block devices
    shell: "lsblk | grep {{ item.stdout|regex_replace('/dev/') }}p1 | awk '{print $2}'"
    with_items: "{{ hummingbird_losetup.results }}"
    register: block_devs
    delegate_to: "{{ physical_host }}"

  - name: Hummingbird  extra lxc config
    lxc_container:
      name: "{{ container_name }}"
      container_config:
        - "lxc.aa_profile = unconfined"
        - "lxc.cgroup.devices.allow = b *:* rwm"
    delegate_to: "{{ physical_host }}"

  - name: Wait for container connectivity
    wait_for_connection:
      connect_timeout: "{{ lxc_container_wait_params.connect_timeout | default(omit) }}"
      delay: "{{ lxc_container_wait_params.delay | default(omit) }}"
      sleep: "{{ lxc_container_wait_params.sleep | default(omit) }}"
      timeout: "{{ lxc_container_wait_params.timeout | default(omit) }}"

  - name: Mknod on loopback devices
    shell: "mknod -m 666 {{ device_mapping[item.0] }} b {{ item.1.stdout.split(':')[0] }} {{ item.1.stdout.split(':')[1] }} && mknod -m 666 {{ device_mapping[item.0] }}1 b {{ item.1.stdout.split(':')[0] }} {{ item.1.stdout.split(':')[1] }}"
    with_indexed_items: "{{ block_devs.results }}"
    failed_when: false

  vars_files:
    - test-vars.yml
